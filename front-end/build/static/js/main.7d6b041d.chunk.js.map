{"version":3,"sources":["utils.js","components/ParaSetter/index.jsx","components/Icon/index.jsx","components/ChordProgression/index.jsx","components/Generator/index.jsx","components/MainInterface/index.jsx","App.js","index.js"],"names":["myServer","server","add","obj","v","method","postData","callback","axios","get","then","response","data","setState","error","message","warn","content","key","console","log","post","meter","value","ui","mode","tonic","style","Option","Select","formItemLayout","labelCol","span","wrapperCol","ParaSetter","state","chordStyleControl","textureStyleControl","values","onFinish","PubSub","publish","normFile","e","Array","isArray","fileList","name","this","initialValues","chord_style","rhythm_density","voice_number","enable_texture_style","enable_chord_style","orientation","Item","label","valuePropName","getValueFromEvent","hasFeedback","rules","required","Dragger","action","accept","maxCount","className","InboxOutlined","List","fields","remove","map","field","align","size","noStyle","shouldUpdate","prevValues","curValues","area","sights","fieldKey","placeholder","visibility","MinusCircleOutlined","onClick","type","icon","PlusOutlined","item","disabled","checked","onChange","target","max","min","step","dots","offset","marginTop","htmlType","shape","minHeight","Component","Icon","t","class","viewBox","version","xmlns","width","height","d","Title","Typography","Paragraph","ChordProgression","props","handleStyleChange","prevStyles","father","styles","index","otherStyles","length","textAlign","level","color","marginBottom","id","href","float","fontSize","marginLeft","autoFocus","bordered","onSelect","contains","backgroundColor","borderRadius","idx","marginRight","display","displayChord","title","src","paddingLeft","paddingRight","border","block","tryChangeAllStyle","nextProps","prevState","arr","i","ori","property","slice","Meta","Card","statusText","toTop","scrollToptimer","setInterval","top","document","body","scrollTop","documentElement","speed","clearInterval","Generator","generatingStage","generated","playing","count","calcDivWidth","card","forEach","val","_","__","progression","playMp3","mp3","Audio","Math","random","play","addEventListener","event","pause","askStage","askStageCallback","window","askStageInterval","generateQueryCallback","res","status","parseInt","stage","regenerate","refs","form","getFieldValue","newStyle","newStyles","push","CheckCircleOutlined","LoadingOutlined","userSelect","hoverable","avatar","PlayCircleOutlined","description","download","which","minWidth","padding","CaretRightFilled","lineHeight","CaretLeftFilled","ref","Step","Steps","stepText","des","MainInterface","onSubmit","msg","subscribe","current","maxWidth","help1","Text","code","help2","help3","strong","App","React","useState","isModalVisible","setIsModalVisible","closeModal","QuestionCircleOutlined","paddingTop","visible","onOk","onCancel","footer","defaultActiveKey","centered","TabPane","tab","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d6b041d.chunk.js","sourcesContent":["import { message } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n// export const env = 'dev';\r\nexport const env = 'prod';\r\nexport const prodServer = 'https://billyyi.top/api/chorderator_back_end'\r\nexport const publicServer = 'http://127.0.0.1:5000/api';\r\nexport const privateServer = 'http://localhost:3000/api';\r\nvar comp = env === 'dev' ? privateServer : publicServer;\r\nexport const myServer = env === 'prod' ? prodServer : comp;\r\n\r\nexport function server(add, obj, v, method='get', postData=null, callback=null) {\r\n    if (method === 'get'){\r\n        axios.get(myServer + add).then(\r\n            response => { \r\n                if (callback !== null){\r\n                    callback(response.data);\r\n                }\r\n                obj.setState({\r\n                    [v]:response.data\r\n                })\r\n            },\r\n            error => { \r\n                message.warn({content:'Sorry, something wrong happened to the server!', key:'message'})\r\n                console.log(error)\r\n            },\r\n        )\r\n    }\r\n    else{\r\n        axios.post(myServer + add, postData).then(\r\n            response => { \r\n                if (callback !== null){\r\n                    callback(response.data);\r\n                }\r\n                obj.setState({\r\n                    [v]:response.data\r\n                })\r\n            },\r\n            error => { \r\n                message.warn({content:'Sorry, something wrong happened to the server!', key:'message'})\r\n                console.log(error)\r\n            },\r\n        )\r\n    }\r\n};\r\nexport function getCookie(name){\r\n    var prefix = name + \"=\"\r\n    var start = document.cookie.indexOf(prefix)\r\n \r\n    if (start === -1) {\r\n        return null;\r\n    }\r\n \r\n    var end = document.cookie.indexOf(\";\", start + prefix.length)\r\n    if (end === -1) {\r\n        end = document.cookie.length;\r\n    }\r\n \r\n    var value = document.cookie.substring(start + prefix.length, end)\r\n    return unescape(value);\r\n}\r\nexport const meter = [\r\n    { value:'4/4', ui:'4/4' },\r\n    { value:'3/4', ui:'3/4' },\r\n]\r\nexport const mode = [\r\n    { value:'maj', ui:'Major' },\r\n    { value:'min', ui:'Minor' },\r\n]\r\nexport const tonic = [ \r\n    'C', 'C#', 'Db', 'D', 'D#', 'Eb', 'E', 'F',\r\n    'F#', 'Gb', 'G', 'G#', 'Ab', 'A', 'A#', 'Bb', 'B'\r\n]\r\nexport const progressionStyle = [\r\n    { value:'emotional', ui:'Emotional' },\r\n    { value:'pop', ui:'Pop' },\r\n    { value:'dark', ui:'Dark' },\r\n    { value:'edm', ui:'EDM' },\r\n    { value:'r&b', ui:'R&B' },\r\n]\r\nexport const chordStyle = [\r\n    { value:'standard', ui:'Standard' },\r\n    { value:'emotional', ui:'Emotional' },\r\n    { value:'classy', ui:'Classy' },\r\n    { value:'root-note', ui:'Root Note' },\r\n    { value:'cluster', ui:'Cluster' },\r\n    { value:'power-chord', ui:'Power Chord' },\r\n    { value:'power-octave', ui:'Power Octave' },\r\n    { value:'full-octave', ui:'Full Octave' },\r\n    { value:'first-inversion', ui:'First Inversion' },\r\n    { value:'second-inversion', ui:'Second Inversion' },\r\n    { value:'seventh', ui:'Seventh' },\r\n    { value:'sus2', ui:'Sus2' },\r\n    { value:'sus4', ui:'Sus4' },\r\n]\r\nexport const style = [\r\n    { value:'pop_standard', ui:'Pop Standard' },\r\n    { value:'pop_complex', ui:'Pop Complex' },\r\n    { value:'dark', ui:'Dark' },\r\n    { value:'r&b', ui:'R&B' },\r\n]\r\nexport const rhythm = [\r\n    { value:'fast', ui:'Fast' },\r\n    { value:'slow', ui:'Slow' },\r\n]\r\nexport const cycle = [\r\n    { value:'4m', ui:'Less than 4' },\r\n    { value:'4', ui:'4' },\r\n    { value:'8', ui:'8' },\r\n    { value:'12', ui:'12' },\r\n    { value:'16', ui:'16' },\r\n    { value:'16p', ui:'Greater than 16' },\r\n]\r\nexport const pattern = [\r\n    { value:'2564', ui:'ii-V-vi-IV' },\r\n    { value:'1536', ui:'I-V-iii-vi' },\r\n    { value:'4165', ui:'IV-I-vi-V' },\r\n    { value:'4265', ui:'IV-ii-vi-V' },\r\n    { value:'4561', ui:'IV-V-vi-I' },\r\n    { value:'6345', ui:'vi-III-IV-V' },\r\n]\r\nexport const position = [\r\n    { value:'verse', ui:'Verse' },\r\n    { value:'chorus', ui:'Chorus' },\r\n    { value:'intro', ui:'Intro' },\r\n    { value:'transition', ui:'Transition' },\r\n    { value:'interlude', ui:'Interlude' },\r\n    { value:'bridge', ui:'Bridge' },\r\n    { value:'outro', ui:'Outro' },\r\n    { value:null, ui:'unknown'}\r\n]","import React, { Component } from 'react'\r\nimport {\r\n    Form,\r\n    Select,\r\n    Button,\r\n    Upload,\r\n    Divider,\r\n    Space,\r\n    Slider,\r\n    Checkbox,\r\n} from 'antd';\r\nimport { InboxOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport { server, meter, tonic, style, mode } from '../../utils';\r\nimport PubSub from 'pubsub-js';\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 14 },\r\n};\r\n\r\nexport default class ParaSetter extends Component {\r\n\r\n    state = {\r\n        chordStyleControl: true,\r\n        textureStyleControl: true,\r\n        values: null,\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        server(`/generate`, this, null, 'post', values);\r\n        PubSub.publish('submit', values);\r\n    }\r\n\r\n    normFile = (e) => {\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n    add = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    name=\"validate_other\"\r\n                    {...formItemLayout}\r\n                    onFinish={this.onFinish}\r\n                    initialValues={{\r\n                        tonic: 'C',\r\n                        meter: '4/4',\r\n                        mode: 'maj',\r\n                        chord_style: 'pop_standard',\r\n                        rhythm_density:2,\r\n                        voice_number:2,\r\n                        enable_texture_style:true,\r\n                        enable_chord_style:true,\r\n                    }}\r\n                >\r\n                    <Divider orientation=\"left\">Set Melody</Divider>\r\n                    <Form.Item\r\n                        label=\"Upload Melody MIDI\"\r\n                        name=\"midi\"\r\n                        valuePropName=\"fileList\"\r\n                        getValueFromEvent={this.normFile}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please upload your melody MIDI!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Upload.Dragger name=\"midi\" action=\"/api/chorderator_back_end/upload_melody\" accept='.mid' maxCount={1} >\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Click or drag MIDI file to this area to upload</p>\r\n                        </Upload.Dragger>\r\n                    </Form.Item>\r\n\r\n                    <Divider orientation=\"left\">Set Phrase</Divider>\r\n                    <Form.Item name=\"phrases\" label='Phrases' rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please set the phrase of the melody',\r\n                        },\r\n                    ]}>\r\n                        <Form.List name=\"phrases\">\r\n                            {(fields, { add, remove }) => (\r\n                                <>\r\n                                    {fields.map(field => (\r\n                                        <Space key={field.key} align=\"baseline\" size={120} >\r\n                                            <Form.Item\r\n                                                noStyle\r\n                                                shouldUpdate={(prevValues, curValues) =>\r\n                                                    prevValues.area !== curValues.area || prevValues.sights !== curValues.sights\r\n                                                }\r\n                                            >\r\n                                                {() => (\r\n                                                    <Form.Item\r\n                                                        {...field}\r\n                                                        label=\"Phrase Name\"\r\n                                                        name={[field.name, 'phrase_name']}\r\n                                                        fieldKey={[field.fieldKey, 'phrase_name']}\r\n                                                        rules={[{ required: true, message: 'Missing Name' }]}\r\n                                                    >\r\n                                                        <Select placeholder=\"Please select a name\">\r\n                                                            <Option value='A'>A<span style={{ visibility:'hidden'}}>____________________</span></Option>\r\n                                                            <Option value='B'>B<span style={{ visibility:'hidden'}}>____________________</span></Option>\r\n                                                            <Option value='C'>C<span style={{ visibility:'hidden'}}>____________________</span></Option>\r\n                                                            <Option value='D'>D<span style={{ visibility:'hidden'}}>____________________</span></Option>\r\n                                                        </Select>\r\n                                                    </Form.Item>\r\n                                                )}\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                {...field}\r\n                                                label=\"Phrase Length\"\r\n                                                name={[field.name, 'phrase_length']}\r\n                                                fieldKey={[field.fieldKey, 'phrase_length']}\r\n                                                rules={[{ required: true, message: 'Missing length' }]}\r\n                                            >\r\n                                                <Select placeholder=\"Please select a length\">\r\n                                                    <Option value={4}>4<span style={{visibility:'hidden'}}>_____________________</span></Option>\r\n                                                    <Option value={8}>8<span style={{visibility:'hidden'}}>_____________________</span></Option>\r\n                                                </Select>\r\n                                            </Form.Item>\r\n\r\n                                            <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                                        </Space>\r\n                                    ))}\r\n\r\n                                    <Form.Item>\r\n                                        <Button type=\"dashed\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                                            Add Phrase\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </>\r\n                            )}\r\n                        </Form.List>\r\n                    </Form.Item>\r\n\r\n                    <Divider orientation=\"left\">Set Meta</Divider>\r\n\r\n                    <Form.Item name=\"tonic\" label=\"Tonic\" hasFeedback\r\n                        rules={[{ required: true, message: 'Please select a tonic!' }]}\r\n                    >\r\n                        <Select placeholder=\"Please select a tonic\">\r\n                            {tonic.map((item) => {\r\n                                return <Option value={item}>{item}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"mode\" label=\"Mode\" hasFeedback\r\n                        rules={[{ required: true, message: 'Please select a mode!' }]}\r\n                    >\r\n                        <Select placeholder=\"Please select a mode\">\r\n                            {mode.map((item) => {\r\n                                return <Option value={item.value}>{item.ui}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"meter\" label=\"Meter\" hasFeedback\r\n                        rules={[{ required: true, message: 'Please select a meter!' }]}\r\n                    >\r\n                        <Select placeholder=\"Please select a meter\">\r\n                            {meter.map((item) => {\r\n                                return <Option value={item.value} disabled={item.value === '3/4'?true:false}>{item.ui}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Divider orientation=\"left\">Set Style</Divider>\r\n\r\n                    <Form.Item name=\"enable_chord_style\" label='Enable Chord Style Controlling' valuePropName=\"checked\">\r\n                        <Checkbox checked={this.state.chordStyleControl} onChange={(e) => this.setState({chordStyleControl:e.target.checked})}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"chord_style\" label=\"Chord Style\"\r\n                        rules={[{ required: true, message: 'Please select a style!' }]}\r\n                    >\r\n                        <Select placeholder=\"Please select a style\" disabled={!this.state.chordStyleControl}>\r\n                            {style.map((item) => {\r\n                                return <Option value={item.value}>{item.ui}</Option>\r\n                            })}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"enable_texture_style\" label='Enable Texture Style Controlling' valuePropName=\"checked\">\r\n                        <Checkbox checked={this.state.textureStyleControl} onChange={(e) => this.setState({textureStyleControl:e.target.checked})} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"rhythm_density\" label=\"Texture Rhythm Density (RD)\"\r\n                        rules={[{ required: true, message: 'Please select a RD!' }]}\r\n                    >\r\n                        <Slider max={4} min={0} step={1} dots disabled={!this.state.textureStyleControl}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"voice_number\" label=\"Texture Voice Number (VN)\"\r\n                        rules={[{ required: true, message: 'Please select a VN!' }]}\r\n                    >\r\n                        <Slider max={4} min={0} step={1} dots disabled={!this.state.textureStyleControl}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            span: 4,\r\n                            offset: 11,\r\n                        }}\r\n                        style={{ marginTop: '60px' }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\" shape='round'>\r\n                            Begin Generate\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                <div style={{ minHeight: '150px' }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Icon extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <svg t=\"1636188018686\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2662\" width=\"32\" height=\"32\"><path d=\"M906.666667 170.752a32 32 0 0 1 31.701333 27.648l0.298667 4.352v618.666667a32 32 0 0 1-27.648 31.701333l-4.352 0.298667H117.333333a32 32 0 0 1-31.701333-27.648L85.333333 821.418667v-618.666667a32 32 0 0 1 27.648-31.701333l4.352-0.298667h789.333334zM256 533.376H149.333333v256.042667h725.333334v-256.042667H768v159.957333a32 32 0 0 1-63.701333 4.352l-0.298667-4.352v-159.957333h-85.333333v159.957333a32 32 0 0 1-63.701334 4.352L554.666667 693.333333v-159.957333h-85.333334v159.957333a32 32 0 0 1-63.701333 4.352L405.333333 693.333333v-159.957333h-85.333333v159.957333a32 32 0 0 1-63.701333 4.352L256 693.333333v-159.957333z m618.666667-298.624h-725.333334v234.624h725.333334V234.752z m-480 85.333333a32 32 0 1 1 0 64 32 32 0 0 1 0-64z m341.333333-0.042666a32 32 0 0 1 4.352 63.701333l-4.352 0.298667h-106.666667a32 32 0 0 1-4.352-63.701334l4.352-0.298666h106.666667z m-469.333333-0.042667a32 32 0 1 1 0 64 32 32 0 0 1 0-64z\" p-id=\"2663\"></path></svg>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Typography, Select, Divider, Button } from 'antd'\r\nimport { style } from '../../utils';\r\nimport './index.css'\r\n\r\nconst { Title, Paragraph } = Typography;\r\nconst { Option } = Select;\r\n\r\nexport default class ChordProgression extends Component {\r\n\r\n    state = {\r\n        style: this.props.style\r\n    }\r\n\r\n    handleStyleChange = (value) => {\r\n        var prevStyles = this.props.father.state.styles;\r\n        prevStyles[this.props.index] = value;\r\n        this.props.father.setState({styles:prevStyles})\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        return {style: nextProps.style}\r\n    }\r\n\r\n    render() {\r\n        var otherStyles = this.props.data['otherStyles'];\r\n        return (\r\n            <div className='card' style={{ width: `${this.props.data['progression'].length * 75}px` }}>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <Title level={3} style={{ color: 'gray', marginBottom: '0px' }} >\r\n                        <a id='b' href={true}>PROGRESSION</a>\r\n                    </Title>\r\n                </div>\r\n                <div style={{ width: '50%', float: 'left', marginTop: '20px' }}>\r\n                    <Paragraph style={{ fontSize: '10px', color: 'gray', marginLeft: '12px' }}>Style</Paragraph>\r\n                    <Select value={this.state.style} autoFocus={false} bordered={false} style={{ fontSize: '25px' }} onSelect={this.handleStyleChange}>\r\n                        {style.map((item) => {\r\n                            return <Option value={item.value} disabled={!contains(otherStyles, item.value)}>{item.ui}</Option>\r\n                        })}\r\n                    </Select>\r\n\r\n                </div>\r\n\r\n                <div style={{ textAlign: 'center', marginTop: '120px', backgroundColor: '#fff7e6', borderRadius: '10px' }}>\r\n                    <div>\r\n                        <Title level={3} style={{ fontSize: '20px' }}>\r\n                            {this.props.data['progression'].map((item, idx) => {\r\n                                return (<span>\r\n                                    <Divider type='vertical' style={{ backgroundColor: 'black', marginRight:'16px', marginLeft: idx === 0 ? '0px' : '16px', display:'space-around' }} />\r\n                                    <span style={{display:'space-around'}}>{displayChord(item[0])}</span>\r\n                                </span>)\r\n                            })}\r\n                        </Title>\r\n                    </div>\r\n                </div>\r\n                <iframe title={`pianoroll-${this.props.data['midi_name']}`} src={`/accomontage2/pianoroll/player.html#midi/${this.props.data['midi_name']}`} style={{width:'100%', height:'150px', marginTop:\"20px\", paddingLeft:'20px', paddingRight:'20px', border:'0px'}}></iframe>\r\n                <Button type='dashed' block style={{ marginTop: '20px' }} onClick={() => this.props.father.tryChangeAllStyle(this.state.style)}>Change all styles to current style</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction contains(arr, obj) {\r\n    var i = arr.length;\r\n    while (i--) {\r\n        if (arr[i] === obj) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction displayChord(ori) {\r\n    var property = ''\r\n    if (ori.slice(2, 3) === '1') {\r\n        property = 'm'\r\n    }\r\n    if (ori.slice(1, 2) === ' ') {\r\n        return ori.slice(0, 1) + property;\r\n    }\r\n    else {\r\n        return ori.slice(0, 2) + property;\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './index.css'\r\nimport { LoadingOutlined, CheckCircleOutlined, CaretRightFilled, CaretLeftFilled, PlayCircleOutlined } from '@ant-design/icons';\r\nimport { Empty, Spin, Button, Typography, Divider, Card, Form, Slider, Checkbox } from 'antd';\r\nimport Icon from '../Icon';\r\nimport { myServer, server } from '../../utils';\r\nimport ChordProgression from '../ChordProgression';\r\n\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\nconst statusText = [\r\n    'Preparing...',\r\n    'Loading melodies, initializing melody meta...',\r\n    'Analyzing melodies, constructing progressions...',\r\n    'Loading library, refining progressions according to styles...',\r\n    'Generating textures...',\r\n    'Synthesizing...',\r\n    'Complete!',\r\n]\r\nfunction toTop() {\r\n    var scrollToptimer = setInterval(function () {\r\n        var top = document.body.scrollTop || document.documentElement.scrollTop;\r\n        var speed = top / 5;\r\n        if (document.body.scrollTop !== 0) {\r\n            document.body.scrollTop -= speed;\r\n        } else {\r\n            document.documentElement.scrollTop -= speed;\r\n        }\r\n        if (top === 0) {\r\n            clearInterval(scrollToptimer);\r\n        }\r\n    }, 30);\r\n}\r\nexport default class Generator extends Component {\r\n\r\n\r\n    state = {\r\n        generatingStage: 0,\r\n        generated: [],\r\n        playing: 'stop',\r\n        textureStyleControl: this.props.values['enable_texture_style'],\r\n        styles: []\r\n    }\r\n\r\n    count = 0;\r\n\r\n    calcDivWidth = () => {\r\n\r\n        var card = 0;\r\n        this.state.generated.forEach(function (val, _, __) {\r\n            card += val.progression.length * 75;\r\n        }, 0);\r\n        var total = card + 100 + (this.state.generated.length + 3) * 4 + 2\r\n        return total;\r\n    }\r\n\r\n\r\n    playMp3 = (e) => {\r\n\r\n        if (this.state.playing === 'stop') {\r\n            this.mp3 = new Audio(myServer + `/wav/${Math.random()}`);\r\n            this.mp3.play();\r\n            this.mp3.addEventListener('ended', (event) => {\r\n                this.setState({\r\n                    playing: 'stop'\r\n                })\r\n            });\r\n            this.setState({\r\n                playing: 'playing'\r\n            })\r\n        }\r\n        else if (this.state.playing === 'pause') {\r\n            this.mp3.play();\r\n            this.setState({\r\n                playing: 'playing'\r\n            })\r\n        }\r\n        else if (this.state.playing === 'playing') {\r\n            this.setState({\r\n                playing: 'pause'\r\n            })\r\n            this.mp3.pause();\r\n        }\r\n    }\r\n\r\n    askStage = () => {\r\n        server(`/stage_query`, this, null, 'get', null, this.askStageCallback);\r\n        if (this.state.generatingStage === 7) {\r\n            window.clearInterval(this.askStageInterval);\r\n            server(`/generated_query`, this, null, 'get', null, this.generateQueryCallback);\r\n        }\r\n    }\r\n\r\n    askStageCallback = (res) => {\r\n        if (res.status === 'ok') {\r\n            this.setState({ generatingStage: parseInt(res.stage) })\r\n        }\r\n    }\r\n\r\n    generateQueryCallback = (res) => {\r\n        if (res.status === 'ok') {\r\n            this.setState({ generated: res.log, styles: res.log.map(item => item.style) })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.askStageInterval = setInterval(this.askStage, 500)\r\n    }\r\n    componentWillUnmount() {\r\n        window.clearInterval(this.askStageInterval);\r\n        this.setState({\r\n            playing: 'stop'\r\n        })\r\n        this.mp3 = null\r\n    }\r\n    regenerate = () => {\r\n        this.mp3.pause();\r\n        var values = this.props.values;\r\n        values['chord_style'] = this.state.styles;\r\n        values['rhythm_density'] = this.refs.form.getFieldValue('rhythm_density');\r\n        values['voice_number'] = this.refs.form.getFieldValue('voice_number');\r\n        values['enable_texture_style'] = this.refs.form.getFieldValue('enable_texture_style');\r\n        server(`/generate`, this, null, 'post', values)\r\n        this.askStageInterval = setInterval(this.askStage, 500);\r\n        this.setState({\r\n            generated: [],\r\n            generatingStage: 0,\r\n            playing: 'stop'\r\n        })\r\n        this.mp3 = null;\r\n        toTop();\r\n    }\r\n\r\n    tryChangeAllStyle = (newStyle) => {\r\n        var newStyles = [];\r\n        for (let i = 0; i < this.state.generated.length; i++) {\r\n            if (contains(this.state.generated[i].otherStyles, newStyle)) {\r\n                newStyles.push(newStyle);\r\n            }\r\n            else {\r\n                newStyles.push(this.state.styles[i]);\r\n            }\r\n        }\r\n        this.setState({ styles: newStyles });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='upper'>\r\n                    <div style={{ width: '50%', float: 'left', height: '100%' }}>\r\n                        <div className='status'>\r\n                            {statusText.map((item, idx) => {\r\n                                if (idx < this.state.generatingStage || (idx === this.state.generatingStage && this.state.generatingStage === 6)) {\r\n                                    return <p><CheckCircleOutlined style={{ marginRight: '6px' }} />{item}</p>\r\n                                }\r\n                                else if (idx === this.state.generatingStage) {\r\n                                    return <p><LoadingOutlined style={{ marginRight: '6px' }} />{item}</p>\r\n                                }\r\n                                else {\r\n                                    return <p></p>\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: '50%', float: 'right', height: '100%' }}>\r\n                        {this.state.generated.length === 0 ?\r\n                            <div style={{ paddingLeft: '50px', paddingRight: '50px', textAlign: 'center' }}>\r\n                                <Title level={1} style={{ float: 'right', fontSize: '25px', color: '#AAAAAA', userSelect: 'none' }}>Generating, please wait...</Title>\r\n                                <Divider></Divider>\r\n                                <Spin size=\"large\" style={{ marginTop: '50px' }} />\r\n                            </div>\r\n                            :\r\n                            <div style={{ paddingLeft: '50px', paddingRight: '50px' }}>\r\n                                <Title level={1} style={{ float: 'right', fontSize: '25px', color: '#AAAAAA', userSelect: 'none' }}>Progression generated!</Title>\r\n                                <Divider></Divider>\r\n                                <a href={true} onClick={this.playMp3}>\r\n                                    <Card hoverable style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                                        <Meta\r\n                                            avatar={this.state.playing === 'playing' ?\r\n                                                <a href={true} style={{ color: '#73d13d' }} id='whole'><PlayCircleOutlined style={{ fontSize: '32px' }} /></a>\r\n                                                :\r\n                                                <a href={true}><PlayCircleOutlined style={{ fontSize: '32px' }} id='whole' /></a>\r\n                                            }\r\n                                            title={<div style={{ fontSize: '20px' }}>Listen to the Generated Audio</div>}\r\n                                            description=\"Click the play button on the left to play\"\r\n                                        />\r\n                                    </Card>\r\n                                </a>\r\n                                <a download='generated.mid' href={myServer + `/midi/${Math.random()}`}>\r\n                                    <Card hoverable style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                                        <Meta\r\n                                            avatar={<Icon which='midi' />}\r\n                                            title={<div style={{ fontSize: '20px' }}>Download MIDI</div>}\r\n                                            description=\"MIDI consist a melody track and a progression track\"\r\n                                        />\r\n                                    </Card>\r\n                                </a>\r\n\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='down' style={{ marginBottom: '30px' }}>\r\n                    {this.state.generated.length === 0 ?\r\n                        <div style={{ width: '100%' }}>\r\n                            <Empty style={{ marginTop: '150px' }} description='Progression not generated yet.' />\r\n                        </div>\r\n                        :\r\n                        <div style={{ minWidth: this.calcDivWidth() }}>\r\n                            <div style={{ padding: '2px' }}>\r\n                                <div className='card-start'><CaretRightFilled style={{ lineHeight: '485px', fontSize: '25px' }} /></div>\r\n                                {this.state.generated.map((item, idx) => {\r\n                                    return <ChordProgression data={item} father={this} index={idx} style={this.state.styles[idx]}></ChordProgression>\r\n                                })}\r\n                                <div className='card-end'><CaretLeftFilled style={{ lineHeight: '485px', fontSize: '25px' }} /></div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <Form ref='form'\r\n                    initialValues={{\r\n                        enable_texture_style: this.props.values['enable_texture_style'],\r\n                        rhythm_density: this.props.values['rhythm_density'],\r\n                        voice_number: this.props.values['voice_number']\r\n                    }}>\r\n                    <Form.Item name=\"enable_texture_style\" label='Enable Texture Style Controlling' valuePropName=\"checked\">\r\n                        <Checkbox checked={this.state.textureStyleControl} onChange={(e) => this.setState({ textureStyleControl: e.target.checked })} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"rhythm_density\" label=\"Texture Rhythm Density (RD)\"\r\n                        rules={[{ required: true, message: 'Please select a RD!' }]}\r\n                    >\r\n                        <Slider max={4} min={0} step={1} dots disabled={!this.state.textureStyleControl} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"voice_number\" label=\"Texture Voice Number (VN)\"\r\n                        rules={[{ required: true, message: 'Please select a VN!' }]}\r\n                    >\r\n                        <Slider max={4} min={0} step={1} dots disabled={!this.state.textureStyleControl} />\r\n                    </Form.Item>\r\n                </Form>\r\n                <div style={{ marginTop: '50px', marginLeft: '20%', marginRight: '20%', textAlign: 'center' }}>\r\n                    {this.state.generated.length === 0 ?\r\n                        <Button shape=\"round\" type='primary' size='large' style={{ height: '40px' }} disabled ><div style={{ fontSize: '16px' }}>Re-generate subject to the selected styles</div></Button>\r\n                        :\r\n                        <Button shape=\"round\" type='primary' size='large' style={{ height: '40px' }} onClick={this.regenerate} ><div style={{ fontSize: '16px' }}>Re-generate subject to the selected styles</div></Button>\r\n                    }\r\n                </div>\r\n                <div style={{ minHeight: '50px' }}>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction contains(arr, obj) {\r\n    var i = arr.length;\r\n    while (i--) {\r\n        if (arr[i] === obj) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}","import React, { Component } from 'react'\r\nimport ParaSetter from '../ParaSetter'\r\nimport Generator from '../Generator'\r\nimport { Steps } from 'antd';\r\nimport PubSub from 'pubsub-js'\r\nimport { Typography, Divider } from 'antd';\r\nimport './index.css'\r\n\r\nconst { Step } = Steps;\r\nconst { Title } = Typography;\r\n\r\nconst stepText = {\r\n\r\n    0:{ title:'Set Parameters', des:'Upload melodies.'},\r\n    1:{ title:'Generate Accompaniment', des:'Choose the best.'} \r\n\r\n}\r\n\r\nfunction toTop(){\r\n    var scrollToptimer = setInterval(function () {\r\n        var top = document.body.scrollTop || document.documentElement.scrollTop;\r\n        var speed = top / 4;\r\n        if (document.body.scrollTop!==0) {\r\n            document.body.scrollTop -= speed;\r\n        }else {\r\n            document.documentElement.scrollTop -= speed;\r\n        }\r\n        if (top === 0) {\r\n            clearInterval(scrollToptimer);\r\n        }\r\n    }, 30); \r\n}\r\n\r\nexport default class MainInterface extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            step:0,\r\n            values:[]\r\n        }\r\n        PubSub.subscribe('submit', this.onSubmit)\r\n    }\r\n\r\n    onSubmit = (name, msg) => {\r\n        this.setState({\r\n            step:1,\r\n            values:msg\r\n        })\r\n        toTop();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='head'>\r\n                    <a href='/'><Title level={1} style={{float:'left', marginTop:'0px', fontSize:'55px'}} className='title'><span style={{color:'#003b76'}}>A</span>cco<span style={{color:'#003b76'}}>M</span>ontage<span style={{color:'#003b76'}}>2</span></Title></a>\r\n                    <Steps current={this.state.step} style={{maxWidth:'500px', float:'right', marginTop:'10px', marginBottom:'20px'}}>\r\n                        <Step title={stepText['0'].title} description={stepText['0'].des} >\r\n                        </Step>\r\n                        <Step title={stepText['1'].title} description={stepText['1'].des} />\r\n                    </Steps>\r\n                </div>\r\n                <Divider style={{marginBottom:'50px', backgroundColor:'#003b76'}}/ >\r\n                {this.state.step === 0 ? <ParaSetter></ParaSetter> : <Generator values={this.state.values}></Generator>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\r\nimport MainInterface from './components/MainInterface';\r\nimport { Button, Modal, Tabs, Typography } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons'\r\nimport React from 'react';\r\n\r\nconst help1 = (\r\n  <div style={{paddingLeft:'5%', paddingRight:'5%'}}>\r\n    <Typography.Title level={4}>What are required before generation?</Typography.Title>\r\n    <Typography.Title level={5}>Melody</Typography.Title>\r\n    <Typography.Paragraph>AccoMonatage2 needs a leading melody to generate accompaniment. Please drag the melody to the box or click to upload your melody piece. Melody must be a single-track MIDI file (or multi-track with the melody piece at the first track).</Typography.Paragraph>\r\n    <Typography.Title level={5}>Phrases (segmentation)</Typography.Title>\r\n    <Typography.Paragraph>You must also specify the phrases of the uploaded melody. Each phrase has a name and a length. Phrases with the same name are considered as similar phrases when generating textures. Currently, the length of the phrases only supports 4-bar and 8-bar. Please make sure your melody can fit in the phrase structures.</Typography.Paragraph>\r\n    <Typography.Title level={5}>{'Tonic & mode & meter'}</Typography.Title>\r\n    <Typography.Paragraph>You must specify a tonic, mode, and meter for the melody. For example, a melody piece in C Major key and four fourths beat has tonic=C, mode=Major, meter=4/4. Note that currently only 4/4 is supported.</Typography.Paragraph>\r\n    <Typography.Title level={5}>Chord style</Typography.Title>\r\n    <Typography.Paragraph>The chord style control is optional. You can click on <Typography.Text code>Enable Chord Style Controlling</Typography.Text> to activate chord style control. Currently, there are 4 styles in total, AccoMonatage2 will tend to use the selected style to harmonize the melody (but not guaranteed).</Typography.Paragraph>\r\n    <Typography.Title level={5}>Texture style</Typography.Title>\r\n    <Typography.Paragraph>The texture style control is also optional. Five levels of rhythm density and voice number are available.</Typography.Paragraph>\r\n  </div>\r\n)\r\nconst help2 = (\r\n  <div style={{paddingLeft:'5%', paddingRight:'5%'}}>\r\n    <Typography.Title level={4}>When generating...</Typography.Title>\r\n    <Typography.Paragraph>Please wait patiently, the generating process might take 1 minute. You can view the process on the left part.</Typography.Paragraph>\r\n    <Typography.Title level={4}>After generated</Typography.Title>\r\n    <Typography.Title level={5}>Listen and download</Typography.Title>\r\n    <Typography.Paragraph>You may click to listen to the generated audio or download the generated MIDI file. You can aslo listen to the audio of each phrase separately by clicking the piano roll.</Typography.Paragraph>\r\n    <Typography.Title level={5}>Change style and re-generate</Typography.Title>\r\n    <Typography.Paragraph>The choosen chord style of each phrase is displayed. You can click on and choose a new style. Some styles may not be available. You can also change the texture style of the whole melody. Click on the button at the bottom to re-generate based on new styles.</Typography.Paragraph>\r\n  </div>\r\n)\r\n\r\nconst help3 = (\r\n  <div style={{paddingLeft:'5%', paddingRight:'5%'}}>\r\n    <Typography.Title level={5}>Why the generation result is not satisfying?</Typography.Title>\r\n    <Typography.Paragraph>There might be multiple reasons. Please go through the following check list to improve the output result.</Typography.Paragraph>\r\n    <Typography.Paragraph>\r\n      <ul>\r\n        <li><Typography.Text strong>Blank melody at the begining. </Typography.Text>AccoMontage2 marks the first bar of the melody as the begining of the first phrase. If your melody have a piece of blank at the begining and you are not willing to make it part of your phrase, please remove it (including anacrusis).</li>\r\n        <li><Typography.Text strong>Melody is too sparse. </Typography.Text>AccoMontage2 generates only based on the melody. Please make sure the melody have enough notes for reference. Sparce melody might also produce dissatisfying results.</li>\r\n        <li><Typography.Text strong>Melody not homophonic. </Typography.Text>AccoMontage2 prefers homophonic music. That is to say, the melody is expected to have at most one note playing at any moment.</li>\r\n        <li><Typography.Text strong>Tempo too large or too small. </Typography.Text>In most cases, AccoMonatage2 will harmonize a bar with a single chord. If this is not your wish, you can modify the tempo to a suitable range (usually tempo between 70-120 will produce good results).</li>\r\n        <li><Typography.Text strong>Wrong tonic/mode/meter. </Typography.Text>This might cause the algorithm to generate someting that is completely wrong.</li>\r\n      </ul>\r\n    </Typography.Paragraph>\r\n    <Typography.Paragraph>If you are very sure that the above problem is already solved, you can also try other chord styles and texture styles, or even phrase structures (e.g., split an 8-bar phrase into two 4-bar phrases).</Typography.Paragraph>\r\n    <Typography.Title level={5}>Why the generation fails?</Typography.Title>\r\n    <Typography.Paragraph>Please make sure the phrase label is correct. Currently, a limitation is the melody cannot exceed the labeled phrases. Please make sure your last note is within the provided phrases. Other bugs please contact <a href={true}>anonymous@anonymous.com</a>.</Typography.Paragraph>\r\n    <Typography.Title level={5}>Why the piano roll cannot show up?</Typography.Title>\r\n    <Typography.Paragraph>Piano roll is supported by <a href='https://github.com/googlecreativelab/chrome-music-lab'>Chrome Music Lab</a>. If your region do not have access to Google, the piano roll might fails to render. We are also updating the technolody to overcome this predicament.</Typography.Paragraph>\r\n  </div>\r\n)\r\n\r\nfunction App() {\r\n  const [isModalVisible, setIsModalVisible] = React.useState(false)\r\n\r\n  const closeModal = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button shape='link' style={{ marginLeft: '92%', marginTop: '20px' }} onClick={() => setIsModalVisible(true)}><QuestionCircleOutlined />Help</Button>\r\n      <div className=\"App\">\r\n        <MainInterface />\r\n      </div>\r\n      <div style={{ minHeight: '70px', textAlign: 'center', backgroundColor: '#003b76' }}>\r\n        <h4 style={{ color: 'white', paddingTop: '20px' }}>Interface for AccoMontage2</h4>\r\n      </div>\r\n      <Modal title=\"AccoMonatage2 GUI Help\" visible={isModalVisible} width={800} onOk={closeModal} onCancel={closeModal} footer={[<Button type=\"primary\" onClick={closeModal}>Ok</Button>]}>\r\n        <Tabs defaultActiveKey=\"1\" centered>\r\n          <Tabs.TabPane tab=\"Set Parameters Page\" key=\"1\">\r\n            {help1}\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab=\"Generating Page\" key=\"2\">\r\n            {help2}\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab={'Other Q&A'} key=\"3\">\r\n            {help3}\r\n          </Tabs.TabPane>\r\n        </Tabs>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'antd/dist/antd.less';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}